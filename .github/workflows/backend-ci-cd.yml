name: Backend CI/CD

on:
    push:
        branches: [ develop, master ]
        paths:
            - 'backend/**'
    pull_request:
        types: [opened, synchronize, reopened]
        paths:
            - 'backend/**'
jobs:
    deploy:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        
        steps:
        -   uses: actions/checkout@v3

        -   name: Create setup-env script
            run: |
                cat << 'OUTER' > setup-env.sh
                #!/bin/bash
                # Login to Azure and fetch secret
                az login --identity --username ${{ secrets.AZURE_VM_IDENTITY_ }}
                SERVER_PORT=$(az keyvault secret show --name "SERVER-PORT" --vault-name "devteamtestkv" --query "value" -o tsv)
                SATELLITE_ISS=$(az keyvault secret show --name "SATELLITE-ISS" --vault-name "devteamtestkv" --query "value" -o tsv)
                SATELLITE_AUD=$(az keyvault secret show --name "SATELLITE-AUD" --vault-name "devteamtestkv" --query "value" -o tsv)
                SATELLITE_X5C=$(az keyvault secret show --name "SATELLITE_X5C" --vault-name "devteamtestkv" --query "value" -o tsv)
                SATELLITE_PRIVATE_KEY_PATH=$(az keyvault secret show --name "SATELLITE-PRIVATE-KEY-PATH" --vault-name "devteamtestkv" --query "value" -o tsv)
                SATELLITE_BASE_URL=$(az keyvault secret show --name "SATELLITE-BASE-URL" --vault-name "devteamtestkv" --query "value" -o tsv)

                # Create .env file
                cat << INNER > .env
                SQLITE_HOT=
                SQLITE_PORT=
                SQLITE_USER=
                SQLITE_PASSWORD=
                SQLITE_DB_NAME=
                SERVER_PORT=5000
                SATELLITE_ISS=$SATELLITE_ISS
                SATELLITE_AUD=$SATELLITE_AUD
                SATELLITE_X5C=$SATELLITE_X5C
                SATELLITE_PRIVATE_KEY_PATH=$SATELLITE_PRIVATE_KEY_PATH
                SATELLITE_BASE_URL=$SATELLITE_BASE_URL
                INNER
                OUTER

        -   name: Copy files via ssh
            uses: appleboy/scp-action@master
            with:
                host: ${{ secrets.AZURE_VM_IP }}
                username: ${{ secrets.AZURE_VM_USERNAME }}
                key: ${{ secrets.AZURE_VM_SSH_KEY }}
                source: "."
                target: "/home/${{ secrets.AZURE_VM_USERNAME }}"
    
        -   name: Execute commands on the server
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.AZURE_VM_IP }}
                username: ${{ secrets.AZURE_VM_USERNAME }}
                key: ${{ secrets.AZURE_VM_SSH_KEY }}
                script: |
                    cd /home/${{ secrets.AZURE_VM_USERNAME }}/backend
                    chmod +x setup-env.sh
                    ./setup-env.sh

                    docker build -t myapp .
                    # Stop and remove existing container if it exists
                    docker stop myapp || true
                    docker rm myapp || true
                    # Run new container
                    docker run -d --name myapp -p 5000:5000 myapp
